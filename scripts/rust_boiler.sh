#  Indicates that the script will be executed with zsh.

#!/bin/zsh

# Checks that an argument has been provided
if [ $# -eq 0 ]; then
    echo "Error: A project name is required as an argument."
    exit 1
fi

# Get the project name from the first argument
project_name="$1"

# Create the rust project with its name
cargo new "$project_name"

# Move to the directory where the project is located
cd "$project_name" || exit

# Create .gitignore file and write on it. (the syntax looks like this:)
# 'cat <<EOL > .gitignore' <- cat command to write multiple lines into the file. the file being ".gitignore"
# /* your needs inside the gitignore file. */
# EOL <- this says to the script "write this till line."
cat <<EOL > .gitignore
# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb
EOL

# Confirmation message
echo "Project '$project_name' successfully created with .gitignore."